import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

np.random.seed(0)
num_accidents = 1000
latitude = np.random.uniform(8.4, 37.6, num_accidents)
longitude = np.random.uniform(68.7, 97.3, num_accidents)
road_conditions = np.random.choice([1, 2, 3], num_accidents, p=[0.6, 0.3, 0.1])
weather_conditions = np.random.choice([1, 2, 3], num_accidents, p=[0.7, 0.2, 0.1])
time_of_day = np.random.randint(0, 3, num_accidents)
data = pd.DataFrame({
    'Latitude': latitude,
    'Longitude': longitude,
    'Road': road_conditions,
    'Weather': weather_conditions,
    'Time': time_of_day
})

# EDA: Summary statistics
print("STATISTICS:\n")
print(data.describe())
print("\n")

# EDA: Visualize road conditions
print("ROAD CONDITIONS:\n")
plt.figure(figsize=(10, 4))
plt.bar(data['Road'].value_counts().index, data['Road'].value_counts().values)
plt.title('Distribution of Road Conditions')
plt.xlabel('Road Conditions')
plt.ylabel('Count')
plt.show(" ")
print("\n")

# EDA: Visualize weather conditions
print("WEATHER CONDITIONS:\n")
plt.figure(figsize=(10, 9))
weather_counts = data['Weather'].value_counts().sort_index()
plt.plot(weather_counts.index, weather_counts.values, marker='o', linestyle='-')
plt.title('Distribution of Weather Conditions')
plt.xlabel('Weather Conditions')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show(" ")
print("\n")

# EDA: Visualize time of day
print("TIME OF DAY:\n")
time_of_day_counts = data['Time'].value_counts()
labels = time_of_day_counts.index
sizes = time_of_day_counts.values
colors = ['gold', 'lightcoral', 'lightskyblue']
plt.figure(figsize=(10, 7))
plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=140)
plt.title('Distribution of Time of Day')
plt.axis('equal')
plt.show(" ")
print("\n")

# Visualize accident hotspots (scatter plot)
print("ACCIDENT HOTSPOT:\n")
plt.figure(figsize=(12, 8))
plt.scatter(data['Longitude'], data['Latitude'], alpha=0.5)
plt.title('Accident Hotspots in India')
plt.xlabel('Longitude')
plt.ylabel('Latitude')
plt.grid(True)
plt.show(" ")
